

*/
public class DOB extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon windowMotor = RobotMap.dOBWindowMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    public DigitalInput Oscar = new DigitalInput(); 
    
    public void setInvertSpeed(boolean isInverted) {
	    if(beambroken = false) {
	    	isInverted = true;
	    	CANTalon.set(x);
	    }
    }
    public void setSpeed(double x) {
    if(beambroken = false) {
	    isInverted = false;
	    CANTalon.set(x);
   
    }
    }
    
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	Oscar.get() = boolean beambroken;
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}
