// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc620;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Ultrasonic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon driveTrainTalon1;
    public static CANTalon driveTrainTalon2;
    public static CANTalon driveTrainTalon3;
    public static CANTalon driveTrainTalon4;
    public static RobotDrive driveTrainRobotDrive;
    public static CANTalon dOBWindowMotor;
    public static Compressor forkliftCompressor;
    public static DoubleSolenoid forkliftTopSolenoid;
    public static DoubleSolenoid forkliftBottomSolenoid;
    public static DigitalInput sensorsOpticalSensor;
    public static Ultrasonic sensorsLidar;
    public static Encoder sensorsEncoderL;
    public static Encoder sensorsEncoderR;
    public static PowerDistributionPanel sensorsPID;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainTalon1 = new CANTalon(1);
        LiveWindow.addActuator("DriveTrain", "Talon1", driveTrainTalon1);
        
        driveTrainTalon2 = new CANTalon(2);
        LiveWindow.addActuator("DriveTrain", "Talon2", driveTrainTalon2);
        
        driveTrainTalon3 = new CANTalon(3);
        LiveWindow.addActuator("DriveTrain", "Talon3", driveTrainTalon3);
        
        driveTrainTalon4 = new CANTalon(4);
        LiveWindow.addActuator("DriveTrain", "Talon4", driveTrainTalon4);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainTalon1, driveTrainTalon2,
              driveTrainTalon3, driveTrainTalon4);
        
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        dOBWindowMotor = new CANTalon(5);
        LiveWindow.addActuator("DOB", "WindowMotor", dOBWindowMotor);
        
        forkliftCompressor = new Compressor(0);
        
        
        forkliftTopSolenoid = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("Forklift", "TopSolenoid", forkliftTopSolenoid);
        
        forkliftBottomSolenoid = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("Forklift", "BottomSolenoid", forkliftBottomSolenoid);
        
        sensorsOpticalSensor = new DigitalInput(0);
        LiveWindow.addSensor("Sensors", "OpticalSensor", sensorsOpticalSensor);
        
        sensorsLidar = new Ultrasonic(2, 3);
        LiveWindow.addSensor("Sensors", "Lidar", sensorsLidar);
        
        sensorsEncoderL = new Encoder(1, 4, false, EncodingType.k4X);
        LiveWindow.addSensor("Sensors", "EncoderL", sensorsEncoderL);
        sensorsEncoderL.setDistancePerPulse(1.0);
        sensorsEncoderL.setPIDSourceType(PIDSourceType.kRate);
        sensorsEncoderR = new Encoder(5, 6, false, EncodingType.k4X);
        LiveWindow.addSensor("Sensors", "EncoderR", sensorsEncoderR);
        sensorsEncoderR.setDistancePerPulse(1.0);
        sensorsEncoderR.setPIDSourceType(PIDSourceType.kRate);
        sensorsPID = new PowerDistributionPanel(0);
        LiveWindow.addSensor("Sensors", "PID", sensorsPID);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
